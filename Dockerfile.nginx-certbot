
###########################
## Set GLOBAL BUILD ARGS ##
###########################

# Set NGINX version
ARG NGINX_VERSION="latest"

# Set NGINX configuration
ARG NGINX_CONFIG_FILE="./nginx-custom.conf"

# Set contact email
ARG ACME_CONTACT_EMAIL="contact@example.com"



#########################################
## Stage 1: Create NGINX/Certbot image ##
#########################################

# Create image
FROM nginx:${NGINX_VERSION} AS core_builder

# set environment variables
ARG DEBIAN_FRONTEND=noninteractive

# Install OS packages
RUN apt-get -y -qq update && \
    apt-get -y -qq upgrade && \
    apt-get -y -qq --no-install-recommends install \
        software-properties-common \
        certbot python3-certbot-nginx && \
    rm -rf /var/lib/apt/lists/*



##########################################
## Stage 2: Install management packages ##
##########################################

# Create image
FROM core_builder AS core_builder_mgmt

# Set environment variables
ARG DEBIAN_FRONTEND=noninteractive

# Install OS packages
RUN apt-get -y -qq update && \
    apt-get -y -qq upgrade && \
    apt-get -y -qq --no-install-recommends install \
        # to see process with pid 1
        procps \
        # to allow edit files
        vim \
        # to run process with cron
        cron \
        # to show progress
        pv && \
    rm -rf /var/lib/apt/lists/*

# Setup cron to allow it run as a non root user
RUN chmod u+s $(which cron)



########################################
## Stage 3: Setup NGINX/Certbot image ##
########################################

# Create image
FROM core_builder_mgmt AS nginx_certbot

# set environment variables
ARG DEBIAN_FRONTEND=noninteractive

# Renew ARGs
ARG NGINX_CONFIG_FILE
ARG ACME_CONTACT_EMAIL

# Setup NGINX
COPY ${NGINX_CONFIG_FILE} /etc/nginx/conf.d/default.conf
RUN chmod a+r,o+w /etc/nginx/conf.d/default.conf

# Set environment variables
ENV ACME_CONTACT_EMAIL=${ACME_CONTACT_EMAIL}

# Setup Crontab
RUN printf "\n\
* 2 1 * * /usr/bin/certbot renew --post-hook 'reboot' > /proc/1/fd/1 2>&1 \n\
\n" | crontab -

# Setup Certbot (non-interactive mode)
# Logs in /var/log/letsencrypt/letsencrypt.log!
RUN printf "\n\
\043 Register account \n\
certbot register --non-interactive --agree-tos --email \${ACME_CONTACT_EMAIL} \n\
\043 Obtain and install certificates \n\
cat /etc/nginx/conf.d/default.conf | \
awk '\$1==\"server_name\"{sub(/;/,\"\"); print \$2;}' | \
xargs -I {} \
certbot run --standalone --installer nginx --non-interactive --redirect --domain {} \n\
\n" > /run-certbot-nit.sh
RUN chmod a+rx,u+w /run-certbot-nit.sh

# Script to run CRON and NGINX
RUN printf "\n\
\043 Obtain and install CERTS \n\
bash /run-certbot-nit.sh \n\
\043 Start CRON in BACKGROUND \n\
nohup cron -fL 15 & \n\
\043 Start NGINX in FOREGROUND \n\
nginx -g 'daemon off;' \n\
\n" > /init.sh
RUN chmod a+rx,u+w /init.sh

# Replace original CMD
CMD ["bash", "-c", "/init.sh"]
